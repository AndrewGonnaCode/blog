export const recordsData = [
	{ id: 1, title: 'Наследование', content: 'Наследование — это возможность порождать один класс от другого с сохранением всех свойств и методов класса-предка (суперкласса), добавляя при необходимости новые свойства и методы' },
	{ id: 2, title: 'Полиморфизм', content: 'Полиморфизм — это возможность использовать классы – потомки в контексте, который был предназначен для класса – предка. ' },
	{ id: 3, title: 'Инкапсуляция', content: 'Инкапсуляция – это принцип, согласно которому любой класс и в более широком смысле – любая часть системы должны рассматриваться как «черный ящик»: пользователь класса или подсистемы должен видеть только интерфейс (т.е. список декларируемых свойств и методов) и не вникать во внутреннюю реализацию.» ' },
	{ id: 4, title: 'Абстракция', content: 'Абстра́кция  — в объектно-ориентированном программировании это придание объекту характеристик, которые отличают его от всех объектов, четко определяя его концептуальные границы.' },
	{ id: 5, title: 'Замыкание', content: 'Замыкание — это комбинация функции и лексического окружения, в котором эта функция была объявлена. Это окружение состоит из произвольного количества локальных переменных, которые были в области действия функции во время создания замыкания.' },
	{ id: 6, title: 'Прототипы', content: 'Прототипы - это механизм, с помощью которого объекты JavaScript наследуют свойства друг от друга.' },
]